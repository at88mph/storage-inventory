swagger: '2.0'
info:
  version: '0.1'
  title: Artifact permissions (baldur)
  description: 'Storage Inventory Permissions API.<br/><br/>Clients may authenticate to this service by using a client certificate over SSL.'
schemes:
  - https
basePath: '/baldur'
paths:
  /perms:
    parameters:
      - name: ID
        in: query
        type: string
        description: The asset identifier
        required: true
      - name: OP
        in: query
        description: The type of action the caller wants to authorize.
        required: true
        type: string
        enum: [read, write]
    get:
      description: Get the permissions for the asset identified by the ID parameter, returning either read or write permissions based on the op parameter.
      tags:
        - Artifact permissions
      summary: Get file permissions.
      produces:
        - application/x-permissions+xml
      responses:
        '200':
          description: Successful response.
          headers:
            Content-Type:
              description: The content type of the file.
              type: string
        '401':
          description: If the client does not provide credentials and anonymous access is disallowed.
        '403':
          description: If the client does not have permission.
        '404':
          description: If permissions are not found for the uri.
        '500':
          description: Internal error
        '503':
          description: Service busy

  /availability:
    get:
      tags:
        - Support Interfaces
      summary: VOSI Availability 1.0
      description: >-
        Indicates whether the service is operable and shows the reliability of
        the service for extended and scheduled requests. If the query parameter
        'detail=min' is used, a light weight heart beat test will be performed.
        The heart beat test returns status 200 if the service is available.
      parameters:
        - name: detail
          in: query
          description: >-
            specifies heart beat to be used to check for availability of this
            service, the value 'min' must be used, otherwise the full
            availability test will be performed
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: A VOSI availability document in XML.
          schema:
            $ref: '#/definitions/availability'
        default:
          description: Unexpected error
  /capabilities:
    get:
      summary: VOSI Capabilities 1.0
      tags:
        - Support Interfaces
      description: >
        Provides the service metadata in the form of a list of Capability
        descriptions.  Each of these descriptions is an
        XML element that:
        <ul>
        <li>states that the service provides a particular, IVOA-standard
        function;</li>
        <li>lists the interfaces for invoking that function;</li>
        <li>records any details of the implementation of the function that are
        not defined as default or constant in the standard for that
        function.</li>
        </ul>
      produces:
        - text/xml
      responses:
        '200':
          description: A VOSI Capabilities document in XML.
          schema:
            $ref: '#/definitions/capabilities'
        '500':
          description: Internal server error
        '503':
          description: Service too busy
        default:
          description: Unexpected error
definitions:
  availability:
    type: object
    xml:
      name: availability
      namespace: 'http://www.ivoa.net/xml/VOSIAvailability/v1.0'
      prefix: vosi
    properties:
      available:
        type: boolean
        xml:
          attribute: true
          prefix: vosi
      note:
        type: string
        xml:
          attribute: true
          prefix: vosi
  capabilities:
    type: array
    items:
      $ref: '#/definitions/capability'
    xml:
      namespace: 'http://www.ivoa.net/xml/VOSICapabilities/v1.0'
      prefix: vosi
      wrapped: true
  capability:
    type: object
    properties:
      standardID:
        type: string
        format: uri
        xml:
          attribute: true
      interface:
        type: object
        properties:
          accessURL:
            type: string
            properties:
              use:
                type: string
                xml:
                  attribute: true
          securityMethod:
            type: string
            properties:
              standardID:
                type: string
                format: uri
                xml:
                  attribute: true
